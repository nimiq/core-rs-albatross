[package]
name = "nimiq-lib"
version = "0.1.0"
authors = ["The Nimiq Core Development Team <info@nimiq.com>"]
edition = "2021"
description = "Nimiq's Rust library"
homepage = "https://nimiq.com"
repository = "https://github.com/nimiq/core-rs-albatross"
license = "Apache-2.0"
categories = ["cryptography::cryptocurrencies"]
keywords = ["nimiq", "cryptocurrency", "blockchain"]

[badges]
travis-ci = { repository = "nimiq/core-rs", branch = "master" }
is-it-maintained-issue-resolution = { repository = "nimiq/core-rs" }
is-it-maintained-open-issues = { repository = "nimiq/core-rs" }
maintenance = { status = "experimental" }

[dependencies]
clap = { version = "4.3", features = ["derive"] }
console-subscriber = { version = "0.1", features = ["parking_lot"], optional = true }
derive_builder = "0.12"
directories = "4.0"
hex = "0.4"
# human-panic = { version = "1.0", optional = true } currently unused, might be used in the future
log = { package = "tracing", version = "0.1", features = ["log"] }
log-panics = { version = "2.1", features = ["with-backtrace"], optional = true }
parking_lot = "0.12"
rand = "0.8"
rand_chacha = "0.3.1"
rustls-pemfile = "1.0"
serde = "1.0"
serde_derive = "1.0"
serde_json = { version = "1.0", features = ["preserve_order"], optional = true }
signal-hook = { version = "0.3", optional = true }
strum_macros = "0.24"
toml = "0.7"
url = { version = "2.3", features = ["serde"] }
thiserror = "1.0"
time = { version = "0.3", optional = true }
tokio = { version = "1.29", features = ["rt"], optional = true }
tracing-loki = { version = "0.2.1", optional = true }
tracing-subscriber = { version = "0.3", optional = true }
tracing-web = { version = "0.1", optional = true}

beserial = { path = "../beserial" }
nimiq-block = { path = "../primitives/block" }
nimiq-blockchain = { path = "../blockchain", optional = true }
nimiq-blockchain-interface = { path = "../blockchain-interface" }
nimiq-blockchain-proxy = { path = "../blockchain-proxy", default-features = false }
nimiq-bls = { path = "../bls" }
nimiq-consensus = { path = "../consensus", default-features = false }
nimiq-database = { path = "../database", optional = true }
nimiq-genesis = { path = "../genesis", default-features = false }
nimiq-jsonrpc-core = { git = "https://github.com/nimiq/jsonrpc.git", optional = true }
nimiq-jsonrpc-server = { git = "https://github.com/nimiq/jsonrpc.git", optional = true }
nimiq-keys = { path = "../keys" }
nimiq-light-blockchain = { path = "../light-blockchain" }
nimiq-log = { path = "../log", optional = true }
nimiq-mempool = { path = "../mempool", optional = true }
nimiq-metrics-server = { path = "../metrics-server", optional = true }
nimiq-network-libp2p = { path = "../network-libp2p" }
nimiq-network-interface = { path = "../network-interface" }
nimiq-primitives = { path = "../primitives", features = ["networks"] }
nimiq-rpc-server = { path = "../rpc-server", optional = true }
nimiq-utils = { path = "../utils", features = ["time", "key-store"] }
nimiq-validator = { path = "../validator", optional = true, features = ["trusted_push"] }
nimiq-validator-network = { path = "../validator-network", optional = true }
nimiq-wallet = { path = "../wallet", optional = true }
nimiq-zkp = { path = "../zkp" }
nimiq-zkp-circuits = { path = "../zkp-circuits" }
nimiq-zkp-component = { path = "../zkp-component" }
nimiq-zkp-primitives = { path = "../zkp-primitives" }

[dev-dependencies]
nimiq-test-log = { path = "../test-log" }

[features]
database-storage = ["nimiq-database", "nimiq-zkp-component/database-storage"]
deadlock = ["parking_lot/deadlock_detection"]
default = ["full-consensus"]
full-consensus = ["database-storage", "nimiq-blockchain", "nimiq-consensus/full"]
launcher = []
logging = ["nimiq-log", "serde_json", "tokio", "tracing-subscriber"]
loki = ["logging", "tracing-loki"]
metrics-server = ["nimiq-metrics-server", "nimiq-network-libp2p/metrics", "nimiq-validator/metrics"]
panic = ["log-panics"]
parallel = ["nimiq-zkp/parallel", "nimiq-zkp-circuits/parallel", "nimiq-zkp-component/parallel", "nimiq-zkp-primitives/parallel"]
rpc-server = ["nimiq-jsonrpc-core", "nimiq-jsonrpc-server", "nimiq-rpc-server", "nimiq-wallet", "validator"]
signal-handling = ["signal-hook", "tokio"]
tokio-console = ["console-subscriber", "logging", "tokio/tracing"]
tokio-websocket = ["nimiq-network-libp2p/tokio-websocket"]
validator = ["database-storage", "nimiq-mempool", "nimiq-validator", "nimiq-validator-network", "nimiq-rpc-server"]
wallet = ["database-storage", "nimiq-wallet"]
wasm-websocket = ["nimiq-network-libp2p/wasm-websocket"]
web-logging = ["nimiq-log", "time/wasm-bindgen", "tracing-subscriber", "tracing-web"]
zkp-prover = ["nimiq-zkp/zkp-prover", "nimiq-zkp-circuits/zkp-prover", "nimiq-zkp-component/zkp-prover", "nimiq-zkp-primitives/zkp-prover"]
