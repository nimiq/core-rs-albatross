version: "3.5"

networks:
  devnet:
    name: ${NETWORK_NAME:?err}
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 7.0.0.0/24

services:
  traefik:
    image: traefik:v2.2
    command:
      - --entrypoints.nimiq.address=:8443
      - --entrypoints.rpc.address=:8648
      - --providers.docker=true
    ports:
      - "8443:8443"
      - "8648:8648"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      devnet:
        ipv4_address: 7.0.0.100

  seed1:
    image: core:latest
    labels:
      # Accept outside Nimiq protocol connections
      - traefik.http.routers.seed1.rule=Host(`seed1.${NETWORK_NAME:?err}`)
      - traefik.http.routers.seed1.entrypoints=nimiq
      - traefik.http.routers.seed1.service=seed1
      - traefik.http.services.seed1.loadbalancer.server.port=8443

      # Accept outside RPC connections
      - traefik.http.routers.seed1-rpc.rule=Host(`seed1.${NETWORK_NAME:?err}`)
      - traefik.http.routers.seed1-rpc.entrypoints=rpc
      - traefik.http.routers.seed1-rpc.service=seed1-rpc
      - traefik.http.services.seed1-rpc.loadbalancer.server.port=8648
    environment:
      - LISTEN_ADDRESSES=/ip4/7.0.0.2/tcp/8443/ws
      - NIMIQ_HOST=seed1.${NETWORK_NAME:?err}
      - NIMIQ_NETWORK=dev-albatross
      - NIMIQ_PEER_KEY_FILE=/home/nimiq/.nimiq/peer_key.dat
      - NIMIQ_INSTANT_INBOUND=true
      - NIMIQ_VALIDATOR=validator
      - NIMIQ_NO_LMDB_SYNC=true
      - NIMIQ_MIN_PEERS=1
      - VALIDATOR_BLOCK_DELAY="0"
      - VALIDATOR_KEY=f8ac8d3d52f72f86a97e83f6ccab9c8f60c70e92e13ea490ea3433b7611ab0058f0584d3e4a2b9856e482440967af01a6c878cb5ff0ea98acb07eec5fd0f5deb1db5fb2843d7bf34d7b9fddba5234943e6c3e491cbe08d071668affdf5d10000
      - RPC_ENABLED=true
      # - RPC_USERNAME=rpcclient
      # - RPC_PASSWORD=7F8E0E42-8ACF-47E7-8CC1-0EC66FA3D82D
      - RUST_BACKTRACE="1"
      - NIMIQ_LOG_LEVEL=info
      - NIMIQ_LOG_TIMESTAMPS=true
    networks:
      devnet:
        ipv4_address: 7.0.0.2
    volumes:
      - "seed1:/home/nimiq/.nimiq:rw"

  seed2:
    image: core:latest
    labels:
      # Accept outside Nimiq protocol connections
      - traefik.http.routers.seed2.rule=Host(`seed2.${NETWORK_NAME:?err}`)
    depends_on:
      - seed1
    environment:
      - LISTEN_ADDRESSES=/ip4/7.0.0.3/tcp/8443/ws
      - NIMIQ_HOST=seed2.${NETWORK_NAME:?err}
      - NIMIQ_NETWORK=dev-albatross
      - NIMIQ_SEED_NODES=/ip4/7.0.0.2/tcp/8443/ws
      # - NIMIQ_SEED_NODES=ws://seed1.${NETWORK_NAME:?err}:8443/5af4c3f30998573e8d3476cd0e0543bf7adba576ef321342e41c2bccc246c377
      - NIMIQ_PEER_KEY_FILE=/home/nimiq/.nimiq/peer_key.dat
      - NIMIQ_INSTANT_INBOUND=true
      - NIMIQ_VALIDATOR=validator
      - NIMIQ_NO_LMDB_SYNC=true
      - NIMIQ_MIN_PEERS=1
      - VALIDATOR_BLOCK_DELAY="0"
      - VALIDATOR_KEY=bfbf1e23855190f03222bb2b19dc9d25843494d22bf8ccc1f7abfe6b3b185b3bf76537ee70e7ac5c7c6d7a0046e671bf610572e1cf89b407a7cd095ab9f0868da80003121a26d4d3be1e1abd10861f6c8601e94e0e448f4b86b7512764460100
      - RPC_ENABLED=true
      - RUST_BACKTRACE="1"
      - NIMIQ_LOG_LEVEL=info
      - NIMIQ_LOG_TIMESTAMPS=true
    networks:
      devnet:
        ipv4_address: 7.0.0.3
    volumes:
      - "seed2:/home/nimiq/.nimiq:rw"

  seed3:
    image: core:latest
    labels:
      # Accept outside Nimiq protocol connections
      - traefik.http.routers.seed3.rule=Host(`seed3.${NETWORK_NAME:?err}`)
    depends_on:
      - seed2
    environment:
      - LISTEN_ADDRESSES=/ip4/7.0.0.4/tcp/8443/ws
      - NIMIQ_HOST=seed3.${NETWORK_NAME:?err}
      - NIMIQ_NETWORK=dev-albatross
      - NIMIQ_SEED_NODES=/ip4/7.0.0.2/tcp/8443/ws
      # - NIMIQ_SEED_NODES=ws://seed1.${NETWORK_NAME:?err}:8443/5af4c3f30998573e8d3476cd0e0543bf7adba576ef321342e41c2bccc246c377
      - NIMIQ_PEER_KEY_FILE=/home/nimiq/.nimiq/peer_key.dat
      - NIMIQ_INSTANT_INBOUND=true
      - NIMIQ_VALIDATOR=validator
      - NIMIQ_NO_LMDB_SYNC=true
      - NIMIQ_MIN_PEERS=1
      - VALIDATOR_BLOCK_DELAY="0"
      - VALIDATOR_KEY=eacdbf28aff34ca60f0b57c98d5b4bb32948710d4afa4b3567d21ef871845ada28bc6721b7720ce74242d45674cbc91e317c64f1109b547ef07d13f4e5e936ebd1e68a292f82c71dbb50f6ef68386b8066efa9e40aaa637f86922e90f73f0100
      - RPC_ENABLED=true
      - RUST_BACKTRACE="1"
      - NIMIQ_LOG_LEVEL=info
      - NIMIQ_LOG_TIMESTAMPS=true
    networks:
      devnet:
        ipv4_address: 7.0.0.4
    volumes:
      - "seed3:/home/nimiq/.nimiq:rw"


  seed4:
    image: core:latest
    labels:
      # Accept outside Nimiq protocol connections
      - traefik.http.routers.seed4.rule=Host(`seed4.${NETWORK_NAME:?err}`)
    depends_on:
      - seed3
    environment:
      - LISTEN_ADDRESSES=/ip4/7.0.0.5/tcp/8443/ws
      - NIMIQ_HOST=seed4.${NETWORK_NAME:?err}
      - NIMIQ_NETWORK=dev-albatross
      - NIMIQ_SEED_NODES=/ip4/7.0.0.2/tcp/8443/ws
      # - NIMIQ_SEED_NODES=ws://seed1.${NETWORK_NAME:?err}:8443/5af4c3f30998573e8d3476cd0e0543bf7adba576ef321342e41c2bccc246c377
      - NIMIQ_PEER_KEY_FILE=/home/nimiq/.nimiq/peer_key.dat
      - NIMIQ_INSTANT_INBOUND=true
      - NIMIQ_VALIDATOR=validator
      - NIMIQ_NO_LMDB_SYNC=true
      - NIMIQ_MIN_PEERS=1
      - VALIDATOR_BLOCK_DELAY="0"
      - VALIDATOR_KEY=1aa577387bd1b63ee93dc2aa5547d6c3e78494ebffbbbecc6cdddf058d98c3be543b4454b6e3fe01a3c9d1e3ca35933d96727e29e47e48077488288b02bf8c0a3954ea20471723194a83099f9b434ad47fc67b3d44c61cca134ab9bc0df00000
      - RPC_ENABLED=true
      - RUST_BACKTRACE="1"
      - NIMIQ_LOG_LEVEL=info
      - NIMIQ_LOG_TIMESTAMPS=true
    networks:
      devnet:
        ipv4_address: 7.0.0.5
    volumes:
      - "seed4:/home/nimiq/.nimiq:rw"

  # validator1:
  #   image: core
  #   labels:
  #     - traefik.http.routers.validator1.rule=Host(`validator1.${NETWORK_NAME:?err}`)
  #   depends_on:
  #     - seed2
  #   environment:
  #     - NIMIQ_HOST=validator1.${NETWORK_NAME:?err}
  #     - NIMIQ_NETWORK=dev-albatross
  #     - NIMIQ_SEED_NODES=ws://seed1.${NETWORK_NAME:?err}:8443/5af4c3f30998573e8d3476cd0e0543bf7adba576ef321342e41c2bccc246c377
  #     - NIMIQ_VALIDATOR=validator
  #     - NIMIQ_NO_LMDB_SYNC=true
  #     - VALIDATOR_BLOCK_DELAY="0"
  #     - RPC_ENABLED=true
  #     - RUST_BACKTRACE="1"
  #     - NIMIQ_LOG_LEVEL=debug
  #     - NIMIQ_LOG_TIMESTAMPS=true
  #   networks:
  #     - devnet

  # validator2:
  #   image: core
  #   labels:
  #     - traefik.http.routers.validator2.rule=Host(`validator2.${NETWORK_NAME:?err}`)
  #   depends_on:
  #     - seed2
  #   environment:
  #     - NIMIQ_HOST=validator2.${NETWORK_NAME:?err}
  #     - NIMIQ_NETWORK=dev-albatross
  #     - NIMIQ_SEED_NODES=ws://seed1.${NETWORK_NAME:?err}:8443/5af4c3f30998573e8d3476cd0e0543bf7adba576ef321342e41c2bccc246c377
  #     - NIMIQ_VALIDATOR=validator
  #     - NIMIQ_NO_LMDB_SYNC=true
  #     - VALIDATOR_BLOCK_DELAY="0"
  #     - RPC_ENABLED=true
  #     - RUST_BACKTRACE="1"
  #     - NIMIQ_LOG_LEVEL=debug
  #     - NIMIQ_LOG_TIMESTAMPS=true
  #   networks:
  #     - devnet

  # validator3:
  #   image: core
  #   labels:
  #     - traefik.http.routers.validator3.rule=Host(`validator3.${NETWORK_NAME:?err}`)
  #   depends_on:
  #     - seed2
  #   environment:
  #     - NIMIQ_HOST=validator3.${NETWORK_NAME:?err}
  #     - NIMIQ_NETWORK=dev-albatross
  #     - NIMIQ_SEED_NODES=ws://seed1.${NETWORK_NAME:?err}:8443/5af4c3f30998573e8d3476cd0e0543bf7adba576ef321342e41c2bccc246c377
  #     - NIMIQ_VALIDATOR=validator
  #     - NIMIQ_NO_LMDB_SYNC=true
  #     - VALIDATOR_BLOCK_DELAY="0"
  #     - RPC_ENABLED=true
  #     - RUST_BACKTRACE="1"
  #     - NIMIQ_LOG_LEVEL=debug
  #     - NIMIQ_LOG_TIMESTAMPS=true
  #   networks:
  #     - devnet

  # staking: # Auto staking script (Py)
  #   image: autostaker
  #   restart: always
  #   depends_on:
  #     - validator1
  #   labels:
  #     - traefik.enable=false
  #   environment:
  #     - VALIDATOR_AMOUNT=100000000
  #     - PRIVATE_KEY=b627f21705a095d095327d37ab1c481b40f6cc0fd9c64d0e154919a66a9bb985
  #     - LOG_LEVEL=info
  #     - NETWORK_NAME=${NETWORK_NAME:?err}
  #     - REWARD_ADDRESS="NQ69 UMYS AUH5 UL42 SYFG 55KD S3XP 2PVF YQ6C"
  #     - DOCKER_HOST=unix:/var/run/docker.sock
  #   networks:
  #     devnet:
  #       ipv4_address: 7.0.0.250
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock:ro"

volumes:
  seed1:
  seed2:
  seed3:
  seed4:
