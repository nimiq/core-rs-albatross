[package]
name = "nimiq-utils"
version.workspace = true
authors.workspace = true
license.workspace = true
edition.workspace = true
description = "Various utilities (e.g., CRC, Merkle proofs, timers) for Nimiq's Rust implementation"
homepage.workspace = true
repository.workspace = true
categories.workspace = true
keywords.workspace = true

[badges]
travis-ci = { repository = "nimiq/core-rs", branch = "master" }
is-it-maintained-issue-resolution = { repository = "nimiq/core-rs" }
is-it-maintained-open-issues = { repository = "nimiq/core-rs" }
maintenance = { status = "experimental" }

[lints]
workspace = true

[dependencies]
clear_on_drop = { version = "0.2", optional = true }
futures = { workspace = true, optional = true }
hex = { version = "0.4", optional = true }
libp2p-identity = { version = "0.2", optional = true }
log = { workspace = true, optional = true }
pin-project = "1.1"
rand = { version = "0.8", optional = true }
rand_core = { version = "0.6", optional = true }
serde = "1.0"
thiserror = { version = "1.0", optional = true }

nimiq-collections = { workspace = true, optional = true }
nimiq-database-value = { workspace = true }
nimiq-database-value-derive = { workspace = true }
nimiq-hash = { workspace = true, optional = true }
nimiq-serde = { workspace = true }

[target.'cfg(not(target_family = "wasm"))'.dependencies]
tokio = { version = "1.40.0", optional = true }
[target.'cfg(target_family = "wasm")'.dependencies]
wasm-bindgen-futures = { version = "0.4", optional = true }

[dev-dependencies]
nimiq-keys = { workspace = true }
nimiq-serde = { workspace = true }
nimiq-test-log = { workspace = true }
nimiq-test-utils = { workspace = true }

[features]
crc = []
futures = ["dep:futures"]
key-rng = ["rand", "rand_core"]
key-store = ["log", "thiserror"]
libp2p = ["libp2p-identity"]
merkle = [
    "nimiq-collections",
    "nimiq-hash",
]
otp = ["clear_on_drop", "nimiq-hash", "rand"]
spawn = ["tokio", "tokio/rt", "wasm-bindgen-futures"]
tagged-signing = ["hex"]
time = []
