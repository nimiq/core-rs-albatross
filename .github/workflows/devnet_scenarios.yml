name: Devnet Scenarios

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:
    default: "default"

jobs:

  FourValidatorsReconnectTest:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
    - uses: BSFishy/pip-action@v1
      with:
        packages: |
          sh
    - uses: actions/cache@v2
      with:
        path:
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: cargo-${{ hashFiles('**/Cargo.toml') }}
    - name: Set up Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
    - uses: actions-rs/cargo@v1
      with:
        command: build
    - name: Executes the test
      run: |          
          bash scripts/devnet/devnet.sh
    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
          name: FourValidatorsReconnectTest-logs
          path: |
            temp-logs/
 
  MultipleValidatorsDownTest:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
    - uses: BSFishy/pip-action@v1
      with:
        packages: |
          sh
    - uses: actions/cache@v2
      with:
        path:
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: cargo-${{ hashFiles('**/Cargo.toml') }}
    - name: Set up Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
    - uses: actions-rs/cargo@v1
      with:
        command: build
    - name: Executes the test
      run: |
          bash scripts/devnet/devnet.sh -k 2
    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
          name: MultipleValidatorsDownTest-logs
          path: |
            temp-logs/

  FourValidatorsReconnectRMdatabaseTest:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
    - uses: BSFishy/pip-action@v1
      with:
        packages: |
          sh
    - uses: actions/cache@v2
      with:
        path:
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: cargo-${{ hashFiles('**/Cargo.toml') }}
    - name: Set up Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
    - uses: actions-rs/cargo@v1
      with:
        command: build
    - name: Executes the test
      run: |          
          bash scripts/devnet/devnet.sh -d
    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
          name: FourValidatorsReconnectRMdatabaseTest-logs
          path: |
            temp-logs/

  FourValidatorsReconnectSpammer:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
    - uses: BSFishy/pip-action@v1
      with:
        packages: |
          sh
    - uses: actions/cache@v2
      with:
        path:
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: cargo-${{ hashFiles('**/Cargo.toml') }}
    - name: Set up Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
    - uses: actions-rs/cargo@v1
      with:
        command: build
    - name: Executes the test
      run: |
          bash scripts/devnet/devnet.sh -s 500
    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
          name: FourValidatorsReconnectSpammer-logs
          path: |
            temp-logs/

  MacroBlockProduction:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
    - uses: BSFishy/pip-action@v1
      with:
        packages: |
          sh
    - uses: actions/cache@v2
      with:
        path:
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: cargo-${{ hashFiles('**/Cargo.toml') }}
    - name: Set up Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
    - name: Configure micro block per epoch
      run: |
          sed -i 's/BATCH_LENGTH: u32 = 32;/BATCH_LENGTH: u32 = 5;/g' primitives/src/policy.rs
    - uses: actions-rs/cargo@v1
      with:
        command: build
    - name: Executes the test
      run: |
          bash scripts/devnet/devnet.sh -k 0 -s 150
    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
          name: MacroBlockProduction-logs
          path: |
            temp-logs/
