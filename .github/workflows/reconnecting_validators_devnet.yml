name: Four validators scenario(devnet)

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:
    default: "default"

jobs:

  reconnect-test:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
    - uses: BSFishy/pip-action@v1
      with:
        packages: |
          sh
    - uses: actions/cache@v2
      with:
        path:
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: cargo-${{ hashFiles('**/Cargo.toml') }}
    - name: Set up Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
    - uses: actions-rs/cargo@v1
      with:
        command: build
    - name: Executes the 4 validators reconnecting scenario
      run: |          
          bash scripts/devnet/devnet.sh
    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
          name: reconnect-test-logs
          path: |
            temp-logs/
 
  erase-database-test:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
    - uses: BSFishy/pip-action@v1
      with:
        packages: |
          sh
    - uses: actions/cache@v2
      with:
        path:
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: cargo-${{ hashFiles('**/Cargo.toml') }}
    - name: Set up Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
    - uses: actions-rs/cargo@v1
      with:
        command: build
    - name: Executes the 4 validators reconnecting scenario eraseing their database
      run: |          
          bash scripts/devnet/devnet.sh -d
    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
          name: erase-db-test
          path: |
            temp-logs/

  reconnect-test-with-spammer:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
    - uses: BSFishy/pip-action@v1
      with:
        packages: |
          sh
    - uses: actions/cache@v2
      with:
        path:
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: cargo-${{ hashFiles('**/Cargo.toml') }}
    - name: Set up Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
    - uses: actions-rs/cargo@v1
      with:
        command: build
    - name: Executes the 4 validators scenario with the spammer
      run: |
          bash scripts/devnet/devnet.sh -s 500
    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
          name: reconnect-test-logs-with-spammer
          path: |
            temp-logs/
