[package]
name = "nimiq-validator"
version = "0.1.0"
authors = ["The Nimiq Core Development Team <info@nimiq.com>"]
edition = "2018"
description = "Validator logic of Albatross"
homepage = "https://nimiq.com"
repository = "https://github.com/nimiq/core-rs-albatross"
license = "Apache-2.0"

[badges]
travis-ci = { repository = "nimiq/core-rs", branch = "master" }
maintenance = { status = "experimental" }

[dependencies]
async-trait = "0.1"
futures = "0.3"
futures-cpupool = "0.1"
futures-locks = "0.6"
lazy_static = "1.3"
linked-hash-map = "0.5.4"
lmdb-zero = "0.4"
log = "0.4"
parking_lot = "0.9"
rand = "0.7"
tokio = { version = "0.2", features = ["rt-core", "time"] }

beserial = { path = "../beserial" }
beserial_derive = { path = "../beserial/beserial_derive" }
nimiq-block = { path = "../primitives/block" }
nimiq-block-production = { path = "../block-production" }
nimiq-blockchain = { path = "../blockchain" }
nimiq-bls = { path = "../bls" }
nimiq-collections = { path = "../collections", features = ["bitset"] }
nimiq-consensus = { path = "../consensus" }
nimiq-database = { path = "../database", features = ["full-nimiq"] }
nimiq-genesis = { path = "../genesis" }
nimiq-handel = { path = "../handel" }
nimiq-hash = { path = "../hash" }
nimiq-keys = { path = "../keys" }
nimiq-macros = { path = "../macros" }
nimiq-mempool = { path = "../mempool" }
nimiq-messages = { path = "../messages" }
nimiq-network-interface = { path = "../network-interface" }
nimiq-primitives = { path = "../primitives" }
nimiq-tendermint = { path = "../tendermint" }
nimiq-utils = { path = "../utils", features = ["observer", "timers", "time", "mutable-once", "throttled-queue", "rate-limit"] }
nimiq-validator-network = { path = "../validator-network" }
nimiq-vrf = { path = "../vrf" }

[dev-dependencies]
hex = "0.4"
simple_logger = "1.9.0"
tokio = { version = "0.2", features = ["rt-core", "time", "test-util"] }

nimiq-build-tools = { path = "../build-tools" }
nimiq-network-mock = { path = "../network-mock" }
nimiq-network-libp2p = { path = "../network-libp2p", features = ["memory-transport"] }

[features]
metrics = []
