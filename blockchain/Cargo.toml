[package]
name = "nimiq-blockchain"
version.workspace = true
authors.workspace = true
license.workspace = true
edition.workspace = true
description = "Persistent block storage for Nimiq's Albatross implementation"
homepage.workspace = true
repository.workspace = true
categories.workspace = true
keywords.workspace = true

[badges]
travis-ci = { repository = "nimiq/core-rs", branch = "master" }
is-it-maintained-issue-resolution = { repository = "nimiq/core-rs" }
is-it-maintained-open-issues = { repository = "nimiq/core-rs" }
maintenance = { status = "experimental" }

[dependencies]
futures = { package = "futures-util", version = "0.3" }
hex = "0.4"
log = { package = "tracing", version = "0.1", features = ["log"] }
parking_lot = "0.12"
prometheus-client = { version = "0.22.0", optional = true }
rand = "0.8"
serde = "1.0"
thiserror = "1.0"
tokio = { version = "1.32", features = ["sync"] }
tokio-stream = { version = "0.1", features = ["sync"] }

nimiq-account = { workspace = true, features = ["accounts"] }
nimiq-block = { workspace = true }
nimiq-blockchain-interface = { workspace = true }
nimiq-bls = { workspace = true, features = ["serde-derive"] }
nimiq-collections = { workspace = true }
nimiq-database = { workspace = true }
nimiq-database-value = { workspace = true }
nimiq-genesis = { workspace = true }
nimiq-hash = { workspace = true }
nimiq-keys = { workspace = true }
nimiq-mmr = { workspace = true }
nimiq-primitives = { workspace = true, features = ["tendermint"] }
nimiq-serde = { workspace = true }
nimiq-transaction = { workspace = true }
nimiq-trie = { workspace = true }
nimiq-utils = { workspace = true, features = ["math", "time"] }
nimiq-vrf = { workspace = true }
nimiq-zkp = { workspace = true }

[dev-dependencies]
rand_chacha = "0.3.1"
tempfile = "3.6"

nimiq-tendermint = { workspace = true }
nimiq-test-log = { workspace = true }
nimiq-transaction-builder = { workspace = true }
# This adds a circular dev-dependency which is fine but breaks VS code rust-analyzer.
# See https://github.com/rust-analyzer/rust-analyzer/issues/14167
nimiq-test-utils = { workspace = true }
nimiq-zkp-primitives = { workspace = true }

[features]
metrics = ["prometheus-client"]
