[package]
name = "nimiq-mempool"
version.workspace = true
authors.workspace = true
license.workspace = true
edition.workspace = true
description = "Mempool implementation for Nimiq"
homepage.workspace = true
repository.workspace = true
categories.workspace = true
keywords.workspace = true

[badges]
travis-ci = { repository = "nimiq/core-rs", branch = "master" }
is-it-maintained-issue-resolution = { repository = "nimiq/core-rs" }
is-it-maintained-open-issues = { repository = "nimiq/core-rs" }
maintenance = { status = "experimental" }

[dependencies]
futures = { package = "futures-util", version = "0.3" }
keyed_priority_queue = "0.4"
linked-hash-map = "0.5.6"
log = { package = "tracing", version = "0.1", features = ["log"] }
parking_lot = "0.12"
prometheus-client = { version = "0.19.0", optional = true}
serde = "1.0"
thiserror = "1.0"
tokio = { version = "1.29", features = ["rt", "rt-multi-thread", "sync", "tracing"] }
tokio-metrics = "0.2"
tokio-stream = { version = "0.1", features = ["sync"] }

nimiq-account = { workspace = true }
nimiq-block = { workspace = true }
nimiq-blockchain = { workspace = true }
nimiq-blockchain-interface = { workspace = true }
nimiq-database = { workspace = true }
nimiq-hash = { workspace = true }
nimiq-keys = { workspace = true }
nimiq-network-interface = { workspace = true }
nimiq-primitives = { workspace = true, features = ["coin", "networks"] }
nimiq-serde = { workspace = true }
nimiq-transaction = { workspace = true }
nimiq-utils = { workspace = true, features = ["time"] }

[dev-dependencies]
hex = "0.4"
rand = "0.8"

nimiq-block = { workspace = true }
nimiq-blockchain = { workspace = true }
nimiq-block-production = { workspace = true }
nimiq-bls = { workspace = true }
nimiq-database = { workspace = true }
nimiq-genesis = { workspace = true }
nimiq-genesis-builder = { workspace = true }
nimiq-network-mock = { workspace = true }
nimiq-test-log = { workspace = true }
nimiq-test-utils = { workspace = true }
nimiq-transaction-builder = { workspace = true }
nimiq-vrf = { workspace = true }

[features]
metrics = ["prometheus-client"]
