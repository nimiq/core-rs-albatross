[package]
name = "nimiq-primitives"
version = "0.1.0"
authors = ["The Nimiq Core Development Team <info@nimiq.com>"]
edition = "2018"
description = "Primitives (e.g., block, account, transaction) to be used in Nimiq's Rust implementation"
homepage = "https://nimiq.com"
repository = "https://github.com/nimiq/core-rs-albatross"
license = "Apache-2.0"
categories = ["cryptography::cryptocurrencies"]
keywords = ["nimiq", "cryptocurrency", "blockchain"]

[badges]
travis-ci = { repository = "nimiq/core-rs", branch = "master" }
is-it-maintained-issue-resolution = { repository = "nimiq/core-rs" }
is-it-maintained-open-issues = { repository = "nimiq/core-rs" }
maintenance = { status = "experimental" }

[dependencies]
bitvec = "0.17"
thiserror = { version = "1.0.20", optional = true }
hex = { version = "0.4", optional = true }
itertools = { version = "0.8", optional = true }
lazy_static = { version = "1.2", optional = true }
log = "0.4"
num-bigint = { version = "0.2", optional = true }
num-traits = { version = "0.2", optional = true }
parking_lot = { version = "0.9", optional = true }
regex = { version = "1.3", optional = true }
serde = { version = "1.0", optional = true }
strum = "0.20"
strum_macros = "0.20"

beserial = { path = "../beserial", version = "0.1" }
beserial_derive = { path = "../beserial/beserial_derive", version = "0.1" }
nimiq-bls = { path = "../bls", version = "0.1", features = ["beserial"], optional = true }
nimiq-keys = { path = "../keys", version = "0.1", optional = true }
nimiq-macros = { path = "../macros", version = "0.1", optional = true }
nimiq-utils = { path = "../utils", version = "0.1", features = ["math"], optional = true}

[dev-dependencies]
lazy_static = "1.2"

[features]
all = ["coin", "account", "policy", "networks", "validators"]
coin = ["hex", "thiserror", "num-traits", "regex"]
account = ["hex", "nimiq-macros", "thiserror"]
policy = ["num-bigint", "num-traits", "parking_lot", "lazy_static"]
networks = ["thiserror"]
validators = ["nimiq-bls", "nimiq-keys", "nimiq-utils", "beserial/bitvec", "itertools", "policy"]
serde-derive = ["serde"]
