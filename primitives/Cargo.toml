[package]
name = "nimiq-primitives"
version = "0.1.0"
authors = ["The Nimiq Core Development Team <info@nimiq.com>"]
edition = "2021"
description = "Simple primitives to be used in Nimiq's Albatross implementation"
homepage = "https://nimiq.com"
repository = "https://github.com/nimiq/core-rs-albatross"
license = "Apache-2.0"
categories = ["cryptography::cryptocurrencies"]
keywords = ["nimiq", "cryptocurrency", "blockchain"]

[badges]
travis-ci = { repository = "nimiq/core-rs", branch = "master" }
is-it-maintained-issue-resolution = { repository = "nimiq/core-rs" }
is-it-maintained-open-issues = { repository = "nimiq/core-rs" }
maintenance = { status = "experimental" }

[lints]
workspace = true

[dependencies]
ark-ec = "0.4"
ark-mnt6-753 = "0.4"
ark-serialize = "0.4"
byteorder = "1.5"
cfg_eval = "0.1"
hex = { version = "0.4", optional = true }
log = { package = "tracing", version = "0.1", features = ["log"] }
once_cell = "1.19"
parking_lot = { version = "0.12.2", optional = true }
regex = { version = "1.10", optional = true }
serde = { version = "1.0", optional = true }
serde_repr = { version = "0.1", optional = true }
strum_macros = "0.26"
thiserror = { version = "1.0", optional = true }
tsify = { git = "https://github.com/sisou/tsify", branch = "sisou/comments", default-features = false, features = ["js"], optional = true }
wasm-bindgen = { version = "0.2", optional = true }

nimiq-bls = { workspace = true, features = ["lazy", "serde-derive"], optional = true }
nimiq-database-value = { workspace = true, optional = true }
nimiq-hash = { workspace = true }
nimiq-keys = { workspace = true, optional = true, features = ["serde-derive"] }
nimiq-serde = { workspace = true, optional = true }
nimiq-utils = { workspace = true, features = ["math"], optional = true }

[dev-dependencies]
nimiq-test-log = { workspace = true }

[features]
account = ["coin", "hex", "serde-derive", "thiserror", "transaction", "trie"]
all = ["account", "coin", "networks", "policy", "slots", "key-nibbles"]
coin = ["hex", "nimiq-serde", "regex", "thiserror"]
key-nibbles = ["hex", "nimiq-keys", "nimiq-database-value", "nimiq-serde"]
networks = ["thiserror"]
policy = ["nimiq-keys", "nimiq-utils", "parking_lot"]
serde-derive = ["nimiq-serde", "serde", "serde_repr"]
slots = ["nimiq-bls", "nimiq-keys", "nimiq-utils", "policy"]
tendermint = ["networks", "nimiq-bls", "serde-derive"]
transaction = ["nimiq-serde", "thiserror"]
tree-proof = []
trie = ["key-nibbles", "serde-derive", "thiserror"]
ts-types = ["serde", "tsify", "wasm-bindgen"]
# parallel = ["rayon", "ark-ec/parallel", "ark-ff/parallel", "ark-std/parallel", "ark-groth16/parallel"]
# zkp-prover = ["ark-mnt4-753/r1cs", "ark-mnt6-753/r1cs", "ark-groth16/r1cs"]
