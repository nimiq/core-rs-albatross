[package]
name = "nimiq-primitives"
version.workspace = true
authors.workspace = true
license.workspace = true
edition.workspace = true
description = "Simple primitives to be used in Nimiq's Albatross implementation"
homepage.workspace = true
repository.workspace = true
categories.workspace = true
keywords.workspace = true

[badges]
travis-ci = { repository = "nimiq/core-rs", branch = "master" }
is-it-maintained-issue-resolution = { repository = "nimiq/core-rs" }
is-it-maintained-open-issues = { repository = "nimiq/core-rs" }
maintenance = { status = "experimental" }

[lints]
workspace = true

[dependencies]
ark-ec = "0.4"
ark-mnt6-753 = "0.4"
ark-serialize = "0.4"
byteorder = "1.5"
cfg_eval = "0.1"
hex = { version = "0.4", optional = true }
log = { workspace = true }
once_cell = "1.20"
parking_lot = { version = "0.12.3", optional = true }
rayon = { version = "^1.10", optional = true }
regex = { version = "1.10", optional = true }
serde = { version = "1.0", optional = true }
serde_bytes = { version = "0.11", optional = true }
serde_repr = { version = "0.1", optional = true }
thiserror = { version = "1.0", optional = true }
tsify = { git = "https://github.com/sisou/tsify", branch = "sisou/comments", default-features = false, features = [
    "js",
], optional = true }
wasm-bindgen = { version = "0.2", optional = true }

nimiq-bls = { workspace = true, features = [
    "lazy",
    "serde-derive",
], optional = true }
nimiq-database-value = { workspace = true, optional = true }
nimiq-database-value-derive = { workspace = true, optional = true }
nimiq-hash = { workspace = true }
nimiq-keys = { workspace = true, optional = true, features = ["serde-derive"] }
nimiq-serde = { workspace = true, optional = true }
nimiq-utils = { workspace = true, optional = true }

[dev-dependencies]
nimiq-test-log = { workspace = true }

[features]
account = ["coin", "hex", "serde-derive", "thiserror", "transaction", "trie"]
all = ["account", "coin", "networks", "policy", "slots", "key-nibbles"]
coin = ["hex", "nimiq-serde", "regex", "thiserror"]
key-nibbles = ["hex", "nimiq-keys", "nimiq-database-value", "nimiq-database-value-derive", "nimiq-serde"]
networks = ["thiserror"]
parallel = ["rayon", "ark-ec/parallel"]
policy = ["nimiq-keys", "nimiq-utils", "parking_lot"]
serde-derive = ["nimiq-serde", "serde", "serde_bytes", "serde_repr"]
slots = ["nimiq-bls", "nimiq-keys", "nimiq-serde", "nimiq-utils", "policy"]
tendermint = ["networks", "nimiq-bls", "serde-derive"]
transaction = ["nimiq-serde", "thiserror"]
tree-proof = []
trie = ["key-nibbles", "serde-derive", "thiserror", "nimiq-database-value-derive", "nimiq-database-value"]
ts-types = ["serde", "tsify", "wasm-bindgen"]
zkp-prover = ["ark-mnt6-753/r1cs"]
