[package]
name = "nimiq-validator-network"
version.workspace = true
authors.workspace = true
license.workspace = true
edition.workspace = true
description = "Nimiq's validator network abstraction in Rust"
homepage.workspace = true
repository.workspace = true
categories.workspace = true
keywords.workspace = true

[badges]
travis-ci = { repository = "nimiq/core-rs", branch = "master" }
is-it-maintained-issue-resolution = { repository = "nimiq/core-rs" }
is-it-maintained-open-issues = { repository = "nimiq/core-rs" }
maintenance = { status = "experimental" }

[lints]
workspace = true

[dependencies]
async-trait = "0.1"
futures = { workspace = true }
log = { workspace = true }
parking_lot = "0.12"
serde = "1.0"
thiserror = "1.0"
time = { version = "0.3" }
tokio = { version = "1.41", features = ["rt"] }

nimiq-bls = { workspace = true, features = ["lazy", "serde-derive"] }
nimiq-network-interface = { workspace = true }
nimiq-serde = { workspace = true }
nimiq-utils = { workspace = true, features = ["futures", "spawn", "tagged-signing"] }
