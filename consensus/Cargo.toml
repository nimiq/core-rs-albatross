[package]
name = "nimiq-consensus"
version.workspace = true
authors.workspace = true
license.workspace = true
edition.workspace = true
description = "Consensus logic of Nimiq's Albatross implementation"
homepage.workspace = true
repository.workspace = true
categories.workspace = true
keywords.workspace = true

[badges]
travis-ci = { repository = "nimiq/core-rs", branch = "master" }
is-it-maintained-issue-resolution = { repository = "nimiq/core-rs" }
is-it-maintained-open-issues = { repository = "nimiq/core-rs" }
maintenance = { status = "experimental" }

[lints]
workspace = true

[dependencies]
async-trait = "0.1"
futures = { workspace = true }
futures-executor = { version = "0.3" }
instant = { version = "0.1", features = ["wasm-bindgen"] }
log = { workspace = true }
parking_lot = "0.12"
pin-project = "1.1"
rand = "0.8"
serde = "1.0"
thiserror = "1.0"
tokio = { version = "1.41", features = ["rt", "sync", "time"] }
tokio-stream = { version = "0.1", features = ["sync"] }

nimiq-account = { workspace = true, default-features = false }
nimiq-block = { workspace = true }
nimiq-blockchain = { workspace = true, optional = true }
nimiq-blockchain-interface = { workspace = true }
nimiq-blockchain-proxy = { workspace = true, default-features = false }
nimiq-bls = { workspace = true }
nimiq-hash = { workspace = true }
nimiq-keys = { workspace = true }
nimiq-light-blockchain = { workspace = true }
nimiq-macros = { workspace = true }
nimiq-mmr = { workspace = true }
nimiq-network-interface = { workspace = true }
nimiq-primitives = { workspace = true, features = ["policy", "trie"] }
nimiq-serde = { workspace = true }
nimiq-time = { workspace = true }
nimiq-transaction = { workspace = true }
nimiq-utils = { workspace = true, features = ["futures", "merkle", "spawn", "time"] }
nimiq-zkp-component = { workspace = true }

[dev-dependencies]
hex = "0.4"

nimiq-bls = { workspace = true }
nimiq-database = { workspace = true }
nimiq-genesis = { workspace = true }
nimiq-genesis-builder = { workspace = true }
nimiq-keys = { workspace = true }
nimiq-network-mock = { workspace = true }
nimiq-network-libp2p = { workspace = true }
nimiq-test-log = { workspace = true }
# This adds a circular dev-dependency which is fine but breaks VS code rust-analyzer.
# See https://github.com/rust-analyzer/rust-analyzer/issues/14167
nimiq-test-utils = { workspace = true }
nimiq-transaction-builder = { workspace = true }
nimiq-trie = { workspace = true }
nimiq-zkp-component = { workspace = true, features = ["zkp-prover", "parallel"] }

[features]
expensive-tests = []
full = ["nimiq-blockchain", "nimiq-blockchain-proxy/full"]
default = ["full"]
